/**
 * Token class
 * Represents tokens generated by lexer
 * <p>
 *
 * @author  Daniel Jackson
 * @version 0, 07/06/01
 */

package tagger;
import java.io.*;
import java.util.*;

public class Token {
	// may be null
	public String arg;
	public int line;
	public int type;

	public static final int COMMENT = 0;
	public static final int WHITESPACE = 1;
	public static final int ALPHABETIC = 2;
	public static final int NUMERIC = 3;

	public static final int PARABREAK = 4;
	public static final int LINEBREAK = 5;

	public static final int APOSTROPHE = 10;
	public static final int PRIME = 11;
	public static final int OPENSINGLEQUOTE = 12;
	public static final int CLOSESINGLEQUOTE = 13;
	public static final int OPENDOUBLEQUOTE = 14;
	public static final int CLOSEDOUBLEQUOTE = 15;
	public static final int HYPHENS = 16;
	public static final int DOTS = 17;

	public static final int PARASTYLECOMMAND = 20;
	public static final int FORMATCOMMAND = 21;
	public static final int POPFORMATCOMMAND = 22;
	public static final int REFCOMMAND = 23;
	public static final int TAGCOMMAND = 24;
	public static final int CITECOMMAND = 25;
	public static final int CHARCOMMAND = 26;
	public static final int LOADCHARMAPCOMMAND = 27;
	public static final int LOADSTYLESHEETCOMMAND = 28;
	public static final int PREAMBLECOMMAND = 29;
	public static final int SEPARATORCOMMAND = 30;

	// treated as a command for italicizing or as a char style
	public static final int UNDERSCORE = 31;
	public static final int DOLLAR = 32;
	public static final int OTHER = 33;
	public static final int ENDOFSTREAM = 34;

	public static final int MAXTOKEN = 34;

	public Token (int type, String arg, int line) {
		this.type = type;
		this.arg = arg;
		this.line = line;
		}

	public Token (int type, int line) {
		this.type = type;
		this.line = line;
		}

	// temporary implementation
	public String toString () {
		return arg;
		}
}